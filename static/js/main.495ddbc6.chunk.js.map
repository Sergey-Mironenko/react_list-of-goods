{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","isReversed","sortByAlphabet","setState","sortByLength","reverse","reset","reorderedGoods","goods","visibleGoods","sort","good1","good2","localeCompare","length","console","log","getReorderedGoods","this","className","type","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,sFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAwB,CACtBC,SAAU,EACVC,YAAY,GAHhB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEH,SAAU,KAP9B,EAUEI,aAAe,WACb,EAAKD,SAAS,CAAEH,SAAU,KAX9B,EAcEK,QAAU,WACR,EAAKF,UAAS,SAACJ,GAAD,MAA6B,CACzCE,YAAaF,EAAME,gBAhBzB,EAoBEK,MAAQ,WACN,EAAKH,SAAS,CACZH,SAAU,EACVC,YAAY,KAvBlB,4CA2BE,WACE,IAAMM,EAxDH,SACLC,EADK,GAGJ,IADCR,EACF,EADEA,SAAUC,EACZ,EADYA,WAENQ,EAAY,YAAOD,GAqBzB,OAnBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQZ,GACN,KAAK,EACH,OAAOW,EAAME,cAAcD,GAC7B,KAAK,EACH,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITb,GACFQ,EAAaJ,UAIfU,QAAQC,IAAIhB,EAAUC,GAEfQ,EA+BkBQ,CACrBpB,EADsC,eAChBqB,KAAKnB,QAG7B,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAA4C,IAAxBD,KAAKnB,MAAMC,UAAkB,YAC1DqB,QAASH,KAAKhB,eAHhB,iCAQA,wBACEkB,KAAK,SACLD,UAAS,4BAA+C,IAAxBD,KAAKnB,MAAMC,UAAkB,YAC7DqB,QAASH,KAAKd,aAHhB,4BAQA,wBACEgB,KAAK,SACLD,UAAS,6BAAwBD,KAAKnB,MAAME,YAAc,YAC1DoB,QAASH,KAAKb,QAHhB,uBAQ4B,IAA1Ba,KAAKnB,MAAME,YAAgD,IAAxBiB,KAAKnB,MAAMC,WAC9C,wBACEoB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKZ,MAHhB,sBASJ,6BACGC,EAAee,KACd,SAAAC,GAAI,OAAI,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eAvE7B,GAAyBC,aCtDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.495ddbc6.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case 1:\n        return good1.localeCompare(good2);\n      case 2:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport class App extends Component {\n  state: ReorderOptions = {\n    sortType: 0,\n    isReversed: false,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: 1 });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: 2 });\n  };\n\n  reverse = () => {\n    this.setState((state : ReorderOptions) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: 0,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const reorderedGoods = getReorderedGoods(\n      goodsFromServer, { ...this.state },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${this.state.sortType !== 1 && 'is-light'}`}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${this.state.sortType !== 2 && 'is-light'}`}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!this.state.isReversed && 'is-light'}`}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(this.state.isReversed !== false || this.state.sortType !== 0) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <ul>\n          {reorderedGoods.map(\n            good => <li key={good} data-cy=\"Good\">{good}</li>,\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}